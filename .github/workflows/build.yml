name: Build for commit

on:
  push:
  workflow_dispatch:
  
    
    
env:
  rust_toolchain: stable

permissions:
  contents: write

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-22.04
    env:
      MINIO_BUCKET: ${{ secrets.MINIO_BUCKET }}

    steps:
      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-12-01
          components: rustfmt, clippy
      - name: Install Rust for Xtensa
        uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          version: "latest"
          ldproxy: true
      - name: Setup | Std
        run: rustup component add rust-src --toolchain nightly-2024-12-01
      - name: Setup | Checkout
        uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2


      - name: Extract Data
        id: extract_version
        run: |
          # Remove the "v" prefix if present
          BASE_VERSION="${{ github.ref_name }}"
          VERSION=${BASE_VERSION#v}
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"

      - name: Install Cargo-Binstall
        uses: cargo-bins/cargo-binstall@main
      - name: Install ESPflash
        run: cargo binstall espflash --no-confirm --force

      - name: Build | Compile (production)
        run: |
          export VERSION=${BRANCH}@${SHA_SHORT}
          cargo build --release
        env:
          BRANCH: ${{ env.branch }}
          SHA_SHORT: $${{ env.sha_short }}

      - name: Merge Binary
        run: espflash save-image --merge --chip esp32c3 target/riscv32imc-esp-espidf/release/td-free-rs td-free.bin

      - name: Create binaries directory
        run: mkdir -p binaries
        
      - name: Copy compiled binaries
        run: |
          cp td-free.bin binaries/td-free-${{ env.sha_short }}.bin
          cp td-free.bin binaries/td-free-latest.bin

      - name: Commit and push binaries
        uses: EndBug/add-and-commit@v9
        with:
          author_name: GitHub Actions
          author_email: actions@github.com
          message: "Add compiled binary for ${{ env.sha_short }}"
          add: binaries/*
          push: true

      
